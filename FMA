local Compkiller = loadstring(game:HttpGet("https://raw.githubusercontent.com/4lpaca-pin/CompKiller/refs/heads/main/src/source.luau"))();

-- Create Notification --
local Notifier = Compkiller.newNotify();

-- Create Config Manager --
local ConfigManager = Compkiller:ConfigManager({
	Directory = "Compkiller-UI",
	Config = "Example-Configs"
});

-- Loading UI --
Compkiller:Loader("rbxassetid://120245531583106", 2.5).yield();

-- Creating Window --
local Window = Compkiller.new({
	Name = "TOPKEKV-2",
	Keybind = "LeftAlt",
	Logo = "rbxassetid://120245531583106",
	Scale = Compkiller.Scale.Window,
	TextSize = 15,
});

-- Notification --
Notifier.new({
	Title = "Protection Status",
	Content = "Data Base Safe 87%",
	Duration = 10,
	Icon = "rbxassetid://120245531583106"
});

-- Watermark --
local Watermark = Window:Watermark();
Watermark:AddText({Icon = "user", Text = ""});
Watermark:AddText({Icon = "clock", Text = Compkiller:GetDate()});
local Time = Watermark:AddText({Icon = "timer", Text = "TIME"});
task.spawn(function()
	while true do task.wait()
		Time:SetText(Compkiller:GetTimeNow());
	end
end)
Watermark:AddText({Icon = "server", Text = Compkiller.Version});

-- Creating Container Tab --
local ContainerTab = Window:DrawContainerTab({
	Name = "Meta Feature",
	Icon = "contact",
});

local ExtractTab = ContainerTab:DrawTab({
	Name = "Meta Feature Tabs",
	Type = "Double"
});

-- Left Section: Movement (Walkspeed)
local LeftSection = ExtractTab:DrawSection({
	Name = "Movement",
	Position = "left"
});

-- Right Section: Fly & Environment
local RightSection = ExtractTab:DrawSection({
	Name = "Environment / Fly",
	Position = "right"
});

-- Player references
local player = game:GetService("Players").LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

-- Walkspeed
local walkSpeedEnabled = false
local walkSpeedValue = 16

LeftSection:AddToggle({
	Name = "Enable Walkspeed",
	Flag = "Walkspeed_Toggle",
	Default = false,
	Callback = function(enabled)
		walkSpeedEnabled = enabled
		if enabled then
			humanoid.WalkSpeed = walkSpeedValue
		else
			humanoid.WalkSpeed = 16
		end
	end,
})

LeftSection:AddSlider({
	Name = "Walkspeed",
	Min = 16,
	Max = 100,
	Default = 16,
	Round = 1,
	Flag = "Walkspeed_Slider",
	Callback = function(value)
		walkSpeedValue = value
		if walkSpeedEnabled then
			humanoid.WalkSpeed = walkSpeedValue
		end
	end,
})

-- Fly System
local flyEnabled = false
local flySpeed = 50
local BodyVelocity = nil
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local camera = workspace.CurrentCamera

local function flyControl()
	if not flyEnabled then return end
	local direction = Vector3.zero
	if UserInputService:IsKeyDown(Enum.KeyCode.W) then
		direction += camera.CFrame.LookVector
	end
	if UserInputService:IsKeyDown(Enum.KeyCode.S) then
		direction -= camera.CFrame.LookVector
	end
	if UserInputService:IsKeyDown(Enum.KeyCode.A) then
		direction -= camera.CFrame.RightVector
	end
	if UserInputService:IsKeyDown(Enum.KeyCode.D) then
		direction += camera.CFrame.RightVector
	end
	if UserInputService:IsKeyDown(Enum.KeyCode.T) then
		direction += Vector3.new(0,1,0)
	end
	if UserInputService:IsKeyDown(Enum.KeyCode.G) then
		direction -= Vector3.new(0,1,0)
	end
	direction = direction.Unit
	if direction ~= direction then direction = Vector3.zero end
	if BodyVelocity then
		BodyVelocity.Velocity = direction * flySpeed
	end
end

local function enableFly()
	local rootPart = character:FindFirstChild("HumanoidRootPart")
	if rootPart and not BodyVelocity then
		BodyVelocity = Instance.new("BodyVelocity")
		BodyVelocity.MaxForce = Vector3.new(1e5,1e5,1e5)
		BodyVelocity.Velocity = Vector3.zero
		BodyVelocity.Parent = rootPart
		RunService:BindToRenderStep("FlyControl", Enum.RenderPriority.Character.Value, flyControl)
	end
end

local function disableFly()
	if BodyVelocity then
		BodyVelocity:Destroy()
		BodyVelocity = nil
	end
	RunService:UnbindFromRenderStep("FlyControl")
end

RightSection:AddToggle({
	Name = "Enable Fly",
	Flag = "Fly_Toggle",
	Default = false,
	Callback = function(enabled)
		flyEnabled = enabled
		if enabled then
			enableFly()
			Notifier.new({Title="Fly", Content="Fly enabled!", Duration=3, Icon="rbxassetid://120245531583106"})
		else
			disableFly()
			Notifier.new({Title="Fly", Content="Fly disabled!", Duration=3, Icon="rbxassetid://120245531583106"})
		end
	end,
})

RightSection:AddSlider({
	Name = "Fly Speed",
	Min = 10,
	Max = 200,
	Default = 50,
	Round = 1,
	Flag = "Fly_Speed_Slider",
	Callback = function(value)
		flySpeed = value
	end,
})

-- Support Fly on Respawn
player.CharacterAdded:Connect(function(char)
	character = char
	humanoid = char:WaitForChild("Humanoid")
	if flyEnabled then
		task.wait(0.25)
		enableFly()
	end
end)

-- Lighting: Fullbright & No Fog
local Lighting = game:GetService("Lighting")
local noFogEnabled = false
local fullBrightEnabled = false

local function loopNoFog()
	while noFogEnabled do
		Lighting.FogEnd = 100000
		Lighting.FogStart = 0
		task.wait(0.1)
	end
end

local function loopFullbright()
	while fullBrightEnabled do
		Lighting.Brightness = 2
		Lighting.Ambient = Color3.new(1,1,1)
		Lighting.OutdoorAmbient = Color3.new(1,1,1)
		task.wait(0.1)
	end
end

RightSection:AddToggle({
	Name = "Loop No Fog",
	Flag = "NoFog_Toggle",
	Default = false,
	Callback = function(enabled)
		noFogEnabled = enabled
		if enabled then
			task.spawn(loopNoFog)
			Notifier.new({Title="No Fog", Content="Loop No Fog Enabled!", Duration=3, Icon="rbxassetid://120245531583106"})
		else
			Lighting.FogEnd = 1000
			Lighting.FogStart = 0
			Notifier.new({Title="No Fog", Content="Loop No Fog Disabled!", Duration=3, Icon="rbxassetid://120245531583106"})
		end
	end,
})

RightSection:AddToggle({
	Name = "Loop Fullbright",
	Flag = "Fullbright_Toggle",
	Default = false,
	Callback = function(enabled)
		fullBrightEnabled = enabled
		if enabled then
			task.spawn(loopFullbright)
			Notifier.new({Title="Fullbright", Content="Loop Fullbright Enabled!", Duration=3, Icon="rbxassetid://120245531583106"})
		else
			Lighting.Brightness = 1
			Lighting.Ambient = Color3.new(0.5,0.5,0.5)
			Lighting.OutdoorAmbient = Color3.new(0.5,0.5,0.5)
			Notifier.new({Title="Fullbright", Content="Loop Fullbright Disabled!", Duration=3, Icon="rbxassetid://120245531583106"})
		end
	end,
})

-- Misc Settings
Window:DrawCategory({ Name = "Misc" })
local MiscTab = Window:DrawTab({
	Name = "Settings",
	Icon = "settings-3",
	Type = "Single",
	EnableScrolling = true
})
local SettingsSection = MiscTab:DrawSection({ Name = "UI Settings" })

SettingsSection:AddToggle({
	Name = "Always Show Frame",
	Default = false,
	Callback = function(v)
		Window.AlwayShowTab = v
	end,
})

SettingsSection:AddColorPicker({
	Name = "Highlight",
	Default = Compkiller.Colors.Highlight,
	Callback = function(v)
		Compkiller.Colors.Highlight = v
		Compkiller:RefreshCurrentColor()
	end,
})

SettingsSection:AddColorPicker({
	Name = "Toggle Color",
	Default = Compkiller.Colors.Toggle,
	Callback = function(v)
		Compkiller.Colors.Toggle = v
		Compkiller:RefreshCurrentColor(v)
	end,
})

-- Config UI
local ConfigUI = Window:DrawConfig({
	Name = "Config",
	Icon = "folder",
	Config = ConfigManager
});
ConfigUI:Init();
